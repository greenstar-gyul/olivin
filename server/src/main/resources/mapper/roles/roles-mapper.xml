<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.olivin.app.roles.mapper.RolesMapper">
    
    <!-- ========== Í∏∞Ï°¥ Ïó≠Ìï† Í¥ÄÎ¶¨ ÏøºÎ¶¨Îì§ (Î≥ÄÍ≤ΩÏÇ¨Ìï≠ ÏóÜÏùå) ========== -->
    
    <!-- ResultMap Ï†ïÏùò - Ïã§Ï†ú DB Íµ¨Ï°∞Ïóê ÎßûÍ≤å ÏàòÏ†ï -->
    <resultMap id="RoleResultMap" type="com.olivin.app.roles.service.RolesVO">
        <id property="roleId" column="ROLE_ID"/>
        <result property="roleName" column="ROLE_NAME"/>
        <result property="roleDesc" column="ROLE_DESC"/>
        <result property="employeeCount" column="EMPLOYEE_COUNT"/>
        <result property="permissionCount" column="PERMISSION_COUNT"/>
        <result property="permissionNames" column="PERMISSION_NAMES"/>
    </resultMap>

    <!-- Î™®Îì† Í∂åÌïú Î™©Î°ù Ï°∞Ìöå -->
    <select id="selectAllRoles" resultMap="RoleResultMap">
        SELECT r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC,
               (SELECT COUNT(*) FROM EMPLOYEES e WHERE e.ROLE_ID = r.ROLE_ID) as EMPLOYEE_COUNT,
               (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = r.ROLE_ID) as PERMISSION_COUNT,
               (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
                FROM ROLE_PERMISSION rp2 
                JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
                WHERE rp2.ROLE_ID = r.ROLE_ID) as PERMISSION_NAMES
        FROM   ROLES r
        ORDER BY r.ROLE_ID ASC
    </select>

    <!-- Ï°∞Í±¥Î≥Ñ Í∂åÌïú Î™©Î°ù Ï°∞Ìöå -->
    <select id="selectRoleList" parameterType="com.olivin.app.roles.service.RolesVO" resultMap="RoleResultMap">
        SELECT r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC,
               (SELECT COUNT(*) FROM EMPLOYEES e WHERE e.ROLE_ID = r.ROLE_ID) as EMPLOYEE_COUNT,
               (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = r.ROLE_ID) as PERMISSION_COUNT,
               (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
                FROM ROLE_PERMISSION rp2 
                JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
                WHERE rp2.ROLE_ID = r.ROLE_ID) as PERMISSION_NAMES
        FROM   ROLES r
        WHERE  1=1
        <if test="roleName != null and roleName != ''">
            AND r.ROLE_NAME LIKE '%' || #{roleName} || '%'
        </if>
        <if test="roleDesc != null and roleDesc != ''">
            AND r.ROLE_DESC LIKE '%' || #{roleDesc} || '%'
        </if>
        ORDER BY r.ROLE_ID ASC
    </select>

    <!-- Í≤ÄÏÉâ Ï°∞Í±¥Ïóê Îî∞Î•∏ Í∂åÌïú Î™©Î°ù Ï°∞Ìöå -->
    <select id="selectRolesByCondition" parameterType="Map" resultMap="RoleResultMap">
        SELECT r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC,
               (SELECT COUNT(*) FROM EMPLOYEES e WHERE e.ROLE_ID = r.ROLE_ID) as EMPLOYEE_COUNT,
               (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = r.ROLE_ID) as PERMISSION_COUNT,
               (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
                FROM ROLE_PERMISSION rp2 
                JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
                WHERE rp2.ROLE_ID = r.ROLE_ID) as PERMISSION_NAMES
        FROM   ROLES r
        WHERE  1=1
        <if test="roleId != null and roleId != ''">
            AND r.ROLE_ID = #{roleId}
        </if>
        <if test="roleName != null and roleName != ''">
            AND r.ROLE_NAME LIKE '%' || #{roleName} || '%'
        </if>
        <if test="roleDesc != null and roleDesc != ''">
            AND r.ROLE_DESC LIKE '%' || #{roleDesc} || '%'
        </if>
        ORDER BY r.ROLE_ID ASC
    </select>

    <!-- ÌäπÏ†ï Í∂åÌïú Ï°∞Ìöå -->
    <select id="selectRole" parameterType="Integer" resultMap="RoleResultMap">
        SELECT r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC,
               (SELECT COUNT(*) FROM EMPLOYEES e WHERE e.ROLE_ID = r.ROLE_ID) as EMPLOYEE_COUNT,
               (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = r.ROLE_ID) as PERMISSION_COUNT,
               (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
                FROM ROLE_PERMISSION rp2 
                JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
                WHERE rp2.ROLE_ID = r.ROLE_ID) as PERMISSION_NAMES
        FROM   ROLES r
        WHERE  r.ROLE_ID = #{roleId}
    </select>

    <!-- Í∂åÌïú Îì±Î°ù -->
    <insert id="insertRole" parameterType="com.olivin.app.roles.service.RolesVO">
        <selectKey keyProperty="roleId" resultType="Integer" order="BEFORE">
            SELECT NVL(MAX(ROLE_ID), 0) + 1 FROM ROLES
        </selectKey>
        INSERT INTO ROLES (
            ROLE_ID, ROLE_NAME, ROLE_DESC
        ) VALUES (
            #{roleId}, #{roleName}, #{roleDesc}
        )
    </insert>

    <!-- Í∂åÌïú Ï†ïÎ≥¥ ÏàòÏ†ï -->
    <update id="updateRole" parameterType="com.olivin.app.roles.service.RolesVO">
        UPDATE ROLES 
        SET ROLE_NAME = #{roleName},
            ROLE_DESC = #{roleDesc}
        WHERE ROLE_ID = #{roleId}
    </update>

    <!-- Í∂åÌïú ÏÇ≠Ï†ú -->
    <delete id="deleteRole" parameterType="Integer">
        DELETE FROM ROLES 
        WHERE  ROLE_ID = #{roleId}
    </delete>

    <!-- Í∏∞ÌÉÄ Í∂åÌïú Í¥ÄÎ†® ÏøºÎ¶¨Îì§... (Î≥ÄÍ≤ΩÏÇ¨Ìï≠ ÏóÜÏùå) -->
    <select id="checkRoleId" parameterType="Integer" resultType="int">
        SELECT COUNT(*) FROM ROLES WHERE ROLE_ID = #{roleId}
    </select>

    <select id="checkRoleName" resultType="int">
        SELECT COUNT(*) FROM ROLES WHERE ROLE_NAME = #{roleName}
        <if test="excludeRoleId != null">AND ROLE_ID != #{excludeRoleId}</if>
    </select>

    <select id="selectLastRoleId" resultType="Integer">
        SELECT MAX(ROLE_ID) FROM ROLES
    </select>

    <select id="selectRoleStatsByEmployee" resultType="map">
        SELECT r.ROLE_ID, r.ROLE_NAME, COUNT(e.EMPLOYEE_ID) as EMPLOYEE_COUNT
        FROM ROLES r LEFT JOIN EMPLOYEES e ON r.ROLE_ID = e.ROLE_ID
        GROUP BY r.ROLE_ID, r.ROLE_NAME ORDER BY r.ROLE_ID
    </select>

    <select id="selectRecentRoles" parameterType="int" resultMap="RoleResultMap">
        SELECT r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC,
               (SELECT COUNT(*) FROM EMPLOYEES e WHERE e.ROLE_ID = r.ROLE_ID) as EMPLOYEE_COUNT,
               (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = r.ROLE_ID) as PERMISSION_COUNT,
               (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
                FROM ROLE_PERMISSION rp2 JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
                WHERE rp2.ROLE_ID = r.ROLE_ID) as PERMISSION_NAMES
        FROM ROLES r ORDER BY r.ROLE_ID ASC FETCH FIRST #{limit} ROWS ONLY
    </select>

    <select id="checkRoleInUse" parameterType="Integer" resultType="int">
        SELECT COUNT(*) FROM EMPLOYEES WHERE ROLE_ID = #{roleId}
    </select>

    <!-- Î™®Îì† Í∂åÌïú Î™©Î°ù Ï°∞Ìöå (Map ÌòïÌÉú) -->
    <select id="selectAllPermissions" resultType="map">
        SELECT PERM_ID, PERM_NAME, PERM_DESCRIPTION, ICON, PARENT_TO
        FROM PERMISSIONS ORDER BY PERM_ID ASC
    </select>

    <!-- ÌäπÏ†ï Í∂åÌïúÏùò Í∂åÌïú ID Î™©Î°ù Ï°∞Ìöå -->
    <select id="selectPermissionIdsByRoleId" parameterType="Integer" resultType="String">
        SELECT rp.PERM_ID FROM ROLE_PERMISSION rp
        WHERE rp.ROLE_ID = #{roleId} ORDER BY rp.PERM_ID ASC
    </select>

    <!-- Í∂åÌïúÏóê Í∂åÌïú Ìï†Îãπ -->
    <insert id="insertRolePermission">
        INSERT INTO ROLE_PERMISSION (RPERM_ID, ROLE_ID, PERM_ID)
        VALUES ((SELECT NVL(MAX(RPERM_ID), 0) + 1 FROM ROLE_PERMISSION), #{roleId}, #{permId})
    </insert>

    <!-- Í∂åÌïúÏùò Î™®Îì† Í∂åÌïú ÏÇ≠Ï†ú -->
    <delete id="deleteRolePermissions" parameterType="Integer">
        DELETE FROM ROLE_PERMISSION WHERE ROLE_ID = #{roleId}
    </delete>

    <select id="selectRolePermissionCount" resultType="map">
        SELECT r.ROLE_ID, r.ROLE_NAME, COUNT(rp.PERM_ID) as PERMISSION_COUNT
        FROM ROLES r LEFT JOIN ROLE_PERMISSION rp ON r.ROLE_ID = rp.ROLE_ID
        GROUP BY r.ROLE_ID, r.ROLE_NAME ORDER BY r.ROLE_ID
    </select>

    <!-- ========== üî• ÏàòÏ†ïÎêú ÏÇ¨Ïõê Í¥ÄÎ†® ÏøºÎ¶¨ - Î∂ÄÏÑúÎ™ÖÍ≥º Ïó≠Ìï†ÏÑ§Î™Ö Ï°∞Ïù∏ ========== -->

    <!-- üî• ÏÇ¨Ïõê Î™©Î°ù Ï°∞Ìöå (Í∂åÌïú Ï†ïÎ≥¥ Ìè¨Ìï®) - Î∂ÄÏÑúÎ™ÖÍ≥º Ïó≠Ìï†ÏÑ§Î™Ö Ï∂îÍ∞Ä -->
    <select id="selectEmployeesWithPermissions" parameterType="Map" resultType="map">
        SELECT 
            e.EMPLOYEE_ID,
            e.EMP_NAME,
            e.DEPARTMENT_ID,
            d.DEPT_NAME,                    /* üî• Î∂ÄÏÑúÎ™Ö Ï°∞Ïù∏ Ï∂îÍ∞Ä */
            e.POSITION,
            e.STATUS,
            e.HIRE_DATE,
            e.ROLE_ID,
            r.ROLE_NAME as BASE_ROLE,       /* Ïó≠Ìï†Î™Ö (Í≤ÄÏÉâÏö©) */
            r.ROLE_DESC,                    /* üî• Ïó≠Ìï†ÏÑ§Î™Ö Ï∂îÍ∞Ä */
            (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = e.ROLE_ID) as PERMISSION_COUNT,
            (SELECT LISTAGG(p.PERM_NAME, ', ') WITHIN GROUP (ORDER BY p.PERM_NAME)
             FROM ROLE_PERMISSION rp2 
             JOIN PERMISSIONS p ON rp2.PERM_ID = p.PERM_ID 
             WHERE rp2.ROLE_ID = e.ROLE_ID) as PERMISSION_NAMES
        FROM EMPLOYEES e
        LEFT JOIN ROLES r ON e.ROLE_ID = r.ROLE_ID
        LEFT JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID    /* üî• Î∂ÄÏÑú ÌÖåÏù¥Î∏î Ï°∞Ïù∏ */
        WHERE 1=1
        <if test="employeeId != null and employeeId != ''">
            AND e.EMPLOYEE_ID LIKE '%' || #{employeeId} || '%'
        </if>
        <if test="empName != null and empName != ''">
            AND e.EMP_NAME LIKE '%' || #{empName} || '%'
        </if>
        <if test="departmentId != null and departmentId != ''">
            AND e.DEPARTMENT_ID LIKE '%' || #{departmentId} || '%'
        </if>
        <if test="deptName != null and deptName != ''">
            AND d.DEPT_NAME LIKE '%' || #{deptName} || '%'    /* üî• Î∂ÄÏÑúÎ™ÖÏúºÎ°ú Í≤ÄÏÉâ */
        </if>
        <if test="position != null and position != ''">
            AND e.POSITION LIKE '%' || #{position} || '%'
        </if>
        <if test="baseRole != null and baseRole != ''">
            AND r.ROLE_NAME LIKE '%' || #{baseRole} || '%'
        </if>
        <if test="hireDateFrom != null and hireDateFrom != ''">
            AND TRUNC(e.HIRE_DATE) >= TO_DATE(#{hireDateFrom}, 'YYYY-MM-DD')
        </if>
        <if test="hireDateTo != null and hireDateTo != ''">
            AND TRUNC(e.HIRE_DATE) &lt;= TO_DATE(#{hireDateTo}, 'YYYY-MM-DD')
        </if>
        ORDER BY e.EMPLOYEE_ID ASC
    </select>

    <!-- ÌäπÏ†ï ÏÇ¨ÏõêÏùò Í∂åÌïú ID Î™©Î°ù Ï°∞Ìöå (Ïó≠Ìï†ÏùÑ ÌÜµÌï¥) -->
    <select id="selectEmployeePermissionIds" parameterType="String" resultType="String">
        SELECT rp.PERM_ID
        FROM EMPLOYEES e
        JOIN ROLE_PERMISSION rp ON e.ROLE_ID = rp.ROLE_ID
        WHERE e.EMPLOYEE_ID = #{employeeId}
        ORDER BY rp.PERM_ID ASC
    </select>

    <!-- ÏÇ¨ÏõêÏùò Ïó≠Ìï† Î≥ÄÍ≤Ω -->
    <update id="updateEmployeeRole" parameterType="Map">
        UPDATE EMPLOYEES 
        SET ROLE_ID = #{roleId}
        WHERE EMPLOYEE_ID = #{employeeId}
    </update>

    <!-- ÏÇ¨Ïõê Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏ -->
    <select id="checkEmployeeExists" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM EMPLOYEES
        WHERE EMPLOYEE_ID = #{employeeId}
    </select>

    <!-- üî• ÏÇ¨ÏõêÏùò Ïó≠Ìï†Î™ÖÍ≥º Ïó≠Ìï†ÏÑ§Î™Ö Ï°∞Ìöå -->
    <select id="selectEmployeeRoleName" parameterType="String" resultType="String">
        SELECT r.ROLE_NAME
        FROM EMPLOYEES e
        JOIN ROLES r ON e.ROLE_ID = r.ROLE_ID
        WHERE e.EMPLOYEE_ID = #{employeeId}
    </select>

    <!-- üî• ÏÇ¨ÏõêÏùò Ïó≠Ìï† ÏÉÅÏÑ∏Ï†ïÎ≥¥ Ï°∞Ìöå (Ïó≠Ìï†Î™Ö + Ïó≠Ìï†ÏÑ§Î™Ö) -->
    <select id="selectEmployeeRoleDetails" parameterType="String" resultType="map">
        SELECT 
            r.ROLE_ID,
            r.ROLE_NAME,
            r.ROLE_DESC
        FROM EMPLOYEES e
        JOIN ROLES r ON e.ROLE_ID = r.ROLE_ID
        WHERE e.EMPLOYEE_ID = #{employeeId}
    </select>

    <!-- Ïó≠Ìï†Î≥Ñ ÏÇ¨Ïõê Ïàò Ï°∞Ìöå -->
    <select id="selectRoleEmployeeCount" parameterType="Integer" resultType="map">
        SELECT 
            r.ROLE_ID,
            r.ROLE_NAME,
            COUNT(e.EMPLOYEE_ID) as EMPLOYEE_COUNT
        FROM ROLES r
        LEFT JOIN EMPLOYEES e ON r.ROLE_ID = e.ROLE_ID
        WHERE r.ROLE_ID = #{roleId}
        GROUP BY r.ROLE_ID, r.ROLE_NAME
    </select>

    <!-- ÏÇ¨ÏõêÏùò Í∂åÌïú ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï°∞Ìöå -->
    <select id="selectEmployeePermissionDetails" parameterType="String" resultType="map">
        SELECT 
            p.PERM_ID,
            p.PERM_NAME,
            p.PERM_DESCRIPTION,
            p.ICON,
            p.PARENT_TO
        FROM EMPLOYEES e
        JOIN ROLE_PERMISSION rp ON e.ROLE_ID = rp.ROLE_ID
        JOIN PERMISSIONS p ON rp.PERM_ID = p.PERM_ID
        WHERE e.EMPLOYEE_ID = #{employeeId}
        ORDER BY p.PERM_ID ASC
    </select>

    <!-- üî• Î∂ÄÏÑúÎ≥Ñ Í∂åÌïú ÌÜµÍ≥Ñ - Î∂ÄÏÑúÎ™Ö Ìè¨Ìï® -->
    <select id="selectDepartmentPermissionStats" resultType="map">
        SELECT 
            e.DEPARTMENT_ID,
            d.DEPT_NAME,                    /* üî• Î∂ÄÏÑúÎ™Ö Ï∂îÍ∞Ä */
            COUNT(DISTINCT e.EMPLOYEE_ID) as EMPLOYEE_COUNT,
            AVG(
                (SELECT COUNT(*) FROM ROLE_PERMISSION rp WHERE rp.ROLE_ID = e.ROLE_ID)
            ) as AVG_PERMISSION_COUNT
        FROM EMPLOYEES e
        LEFT JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID    /* üî• Î∂ÄÏÑú ÌÖåÏù¥Î∏î Ï°∞Ïù∏ */
        WHERE e.DEPARTMENT_ID IS NOT NULL
        GROUP BY e.DEPARTMENT_ID, d.DEPT_NAME
        ORDER BY AVG_PERMISSION_COUNT DESC, e.DEPARTMENT_ID
    </select>

</mapper>