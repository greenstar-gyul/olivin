<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
본사 재고 관리 Mapper 구현체
작성자 : 함동의
작성일 : 2025.07.30
수정이력 :
- 2025.07.30 : 최초 작성
- 2025.08.01 : 재고 조회 LOT 단위로 출력하도록 수정
- 2025.08.07 : 본사 재고 조회 페이지 변경으로 인한 수정
-->
<mapper namespace="com.olivin.app.inventory.mapper.HeadInventoryMapper">
    <!-- 본사 재고 전체 조회 -->
    <!-- 
    <select id="selectAllHeadInventory" resultType="HeadInventoryVO">
        WITH lot_stocks AS (
            SELECT inp.product_id,
                    ipd.lot_no,
                    SUM(ipd.inbnd_quantity) AS inbnd_qty,
                    0 AS outbnd_qty
            FROM   inbnd_product_d ipd 
                    JOIN inbnd inb ON inb.inbnd_no = SUBSTR(ipd.inbnd_d_no, 1, 13)
                    JOIN inbnd_product inp ON inp.inbnd_product_no = ipd.inbnd_product_no
            WHERE  ipd.inbnd_status = '000001'
                AND  inb.inbnd_to = 'COM10001'
            GROUP BY inp.product_id, ipd.lot_no
            
            UNION ALL
            
            SELECT outp.product_id,
                    outpd.lot_no,
                    0 AS inbnd_qty,
                    SUM(outpd.outbnd_quantity) AS outbnd_qty
            FROM   outbnd_product_d outpd 
                    JOIN outbnd outb ON outb.outbnd_no = SUBSTR(outpd.outbnd_product_d_no, 1, 14)
                    JOIN outbnd_product outp ON outp.outbnd_product_no = outpd.outbnd_product_no
            WHERE  outpd.outbnd_status = '010003'
                AND  outb.outbnd_from = 'COM10001'
            GROUP BY outp.product_id, outpd.lot_no
        )
        SELECT p.product_id,
            p.product_name || ' ' || p.pack_qty || '개입' as product_name,
            ls.lot_no,
            get_datacode_name(p.category_main) as category_main,
            get_datacode_name(p.category_sub) as category_sub,
            p.vendor_name,
            p.product_spec,
            NVL(SUM(ls.inbnd_qty) - SUM(ls.outbnd_qty), 0) AS stock_quantity,
            p.safety_stock / p.pack_qty AS safety_stock 임시로 안전재고는 박스 포장단위로 나눠서 계산..
        FROM   products p LEFT JOIN lot_stocks ls ON p.product_id = ls.product_id
        GROUP BY p.product_id, p.product_name, ls.lot_no, p.category_main, p.category_sub, 
                p.vendor_name, p.product_spec, p.pack_qty, p.safety_stock
        ORDER BY p.product_id
    </select>
     -->
    <!-- 본사 재고 전체 조회, 테스트용 -->
    <select id="selectAllHeadInventory" resultType="HeadInventoryVO">
        WITH lot_stocks AS (
            SELECT inp.product_id,
                    ipd.lot_no,
                    SUM(ipd.remain_quantity) AS stock_quantity
            FROM   inbnd_product_d ipd 
                    JOIN inbnd inb ON inb.inbnd_no = SUBSTR(ipd.inbnd_d_no, 1, 13)
                    JOIN inbnd_product inp ON inp.inbnd_product_no = ipd.inbnd_product_no
            WHERE  ipd.inbnd_status = '000001'
              AND  inb.inbnd_to = 'COM10001'
            GROUP BY inp.product_id, ipd.lot_no
        )
        SELECT p.product_id,
               p.product_name,
               ls.lot_no,
               get_datacode_name(p.category_main) as category_main,
               get_datacode_name(p.category_sub) as category_sub,
               p.vendor_name,
               p.product_spec || get_datacode_name(p.unit) as product_spec,
               NVL(SUM(ls.stock_quantity), 0) AS stock_quantity,
               p.safety_stock
        FROM   products p LEFT JOIN lot_stocks ls ON p.product_id = ls.product_id
        GROUP BY p.product_id, p.product_name, ls.lot_no, p.category_main, p.category_sub, 
                 p.vendor_name, p.product_spec, p.pack_qty, p.safety_stock, p.unit
        ORDER BY p.product_id
    </select>


    
    <!-- 조건에 맞는 본사 재고 조회 -->
    <!-- <select id="selectHeadInventoryList" parameterType="HeadInventoryVO" resultType="HeadInventoryVO">
        WITH lot_stocks AS (
            SELECT inp.product_id,
                    ipd.lot_no,
                    SUM(ipd.inbnd_quantity) AS inbnd_qty,
                    0 AS outbnd_qty
            FROM   inbnd_product_d ipd 
                    JOIN inbnd inb ON inb.inbnd_no = SUBSTR(ipd.inbnd_d_no, 1, 13)
                    JOIN inbnd_product inp ON inp.inbnd_product_no = ipd.inbnd_product_no
            WHERE  ipd.inbnd_status = '000001'
                AND  inb.inbnd_to = 'COM10001'
            GROUP BY inp.product_id, ipd.lot_no
            
            UNION ALL
            
            SELECT outp.product_id,
                    outpd.lot_no,
                    0 AS inbnd_qty,
                    SUM(outpd.outbnd_quantity) AS outbnd_qty
            FROM   outbnd_product_d outpd 
                    JOIN outbnd outb ON outb.outbnd_no = SUBSTR(outpd.outbnd_product_d_no, 1, 14)
                    JOIN outbnd_product outp ON outp.outbnd_product_no = outpd.outbnd_product_no
            WHERE  outpd.outbnd_status = '010003'
                AND  outb.outbnd_from = 'COM10001'
            GROUP BY outp.product_id, outpd.lot_no
        )
        SELECT p.product_id,
            p.product_name || ' ' || p.pack_qty || ' 개입' as product_name,
            ls.lot_no,
            get_datacode_name(p.category_main) as category_main,
            get_datacode_name(p.category_sub) as category_sub,
            p.vendor_name,
            p.product_spec,
            NVL(SUM(ls.inbnd_qty) - SUM(ls.outbnd_qty), 0) AS stock_quantity,
            p.safety_stock / p.pack_qty AS safety_stock 임시로 안전재고는 박스 포장단위로 나눠서 계산..
        FROM   products p LEFT JOIN lot_stocks ls ON p.product_id = ls.product_id
        WHERE  1=1
        <if test="productName != null and productName != ''">
            AND p.product_name LIKE '%' || #{productName} || '%'
        </if>
        <if test="categorySub != null and categorySub != ''">
            AND get_datacode_name(category_sub) = #{categorySub}
        </if>
        <if test="vendorName != null and vendorName != ''">
            AND p.vendor_name LIKE '%' || #{vendorName} || '%'
        </if>
        GROUP BY p.product_id, p.product_name, ls.lot_no, p.category_main, p.category_sub, 
                p.vendor_name, p.product_spec, p.pack_qty, p.safety_stock
        ORDER BY p.product_id
    </select> -->
    <!-- 메인 조회 테이블 -->
    <select id="selectHeadInventoryList" parameterType="HeadInventoryVO" resultType="HeadInventoryVO">
        WITH lot_stocks AS (
            SELECT inp.product_id,
                   ipd.lot_no,
                   SUM(ipd.remain_quantity) AS stock_quantity
            FROM   inbnd_product_d ipd 
                   JOIN inbnd inb ON inb.inbnd_no = SUBSTR(ipd.inbnd_d_no, 1, 13)
                   JOIN inbnd_product inp ON inp.inbnd_product_no = ipd.inbnd_product_no
            WHERE  ipd.inbnd_status = '000001'
              AND  inb.inbnd_to = 'COM10001'
            GROUP BY inp.product_id, ipd.lot_no
        )
        SELECT p.product_id,
               p.product_name,
               get_datacode_name(p.category_main) as category_main,
               get_datacode_name(p.category_sub) as category_sub,
               p.vendor_name,
               p.product_spec || get_datacode_name(p.unit) as product_spec,
               NVL(SUM(ls.stock_quantity), 0) AS stock_quantity,
               p.safety_stock
        FROM   products p LEFT JOIN lot_stocks ls ON p.product_id = ls.product_id
        WHERE  p.status = '040001'
        <if test="productName != null and productName != ''">
          AND p.product_name LIKE '%' || #{productName} || '%'
        </if>
        <choose>
            <when test="categorySub == null or categorySub == ''">
            </when>
            <when test="categorySub.endsWith('전체')">
          AND  p.category_sub LIKE SUBSTR(get_datacode_value(#{categorySub}), 1, 3) || '%'
            </when>
            <otherwise>
          AND  p.category_sub = get_datacode_value(#{categorySub})
            </otherwise>
        </choose>
        <if test="vendorName != null and vendorName != ''">
          AND p.vendor_name LIKE '%' || #{vendorName} || '%'
        </if>
        GROUP BY p.product_id, p.product_name, p.category_main, p.category_sub, 
                 p.vendor_name, p.pack_qty, p.safety_stock, p.unit, p.product_spec
        ORDER BY p.product_id
    </select>

    <!-- LOT별 조회 테이블. 상품 코드로 LOT별 재고 조회 -->
    <select id="selectHeadInventoryLot" parameterType="String" resultType="HeadInventoryVO">
        WITH lot_stocks AS (
            SELECT inp.product_id,
                   ipd.lot_no,
                   SUM(ipd.remain_quantity) AS stock_quantity
            FROM   inbnd_product_d ipd 
                   JOIN inbnd inb ON inb.inbnd_no = SUBSTR(ipd.inbnd_d_no, 1, 13)
                   JOIN inbnd_product inp ON inp.inbnd_product_no = ipd.inbnd_product_no
            WHERE  ipd.inbnd_status = '000001'
              AND  inb.inbnd_to = 'COM10001'
            GROUP BY inp.product_id, ipd.lot_no
        )
        SELECT p.product_id,
               p.product_name,
               ls.lot_no,
               -- p.vendor_name,
               -- p.product_spec || get_datacode_name(p.unit) as product_spec,
               NVL(SUM(ls.stock_quantity), 0) AS stock_quantity
        FROM   products p LEFT JOIN lot_stocks ls ON p.product_id = ls.product_id
        WHERE  p.product_id = #{productId}
          AND  ls.stock_quantity IS NOT NULL
          AND  ls.stock_quantity > 0
        GROUP BY p.product_id, p.product_name, ls.lot_no, 
                 p.vendor_name, p.product_spec, p.pack_qty, p.unit
        ORDER BY ls.lot_no
    </select>
</mapper>