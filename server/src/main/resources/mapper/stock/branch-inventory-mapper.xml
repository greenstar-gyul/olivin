<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
본사 재고 관리 Mapper 구현체
작성자 : 함동의
작성일 : 2025.07.31
수정이력 :
- 2025.07.31 : 최초 작성
-->
<mapper namespace="com.olivin.app.inventory.mapper.BranchInventoryMapper">
    <!-- 지점 재고 전체 조회 -->
    <select id="selectAllBranchInventory" resultType="BranchInventoryVO">
        WITH branch_stocks AS (
        SELECT   inp.product_id,
                inp.product_name,
                NVL(SUM(inp.total_inbnd_quantity) * prd.pack_qty, 0) as total_inbnd_quantity,
                0 AS total_outbnd_quantity,
                comp.comp_name
        FROM     inbnd_product inp JOIN inbnd inb ON inb.inbnd_no = inp.inbnd_no
                                    JOIN companys comp ON comp.comp_id = inb.inbnd_to
                                    JOIN products prd ON prd.product_id = inp.product_id
        WHERE    inb.outbnd_from = 'COM10001'
            AND    inp.inbnd_status = '000001'
        GROUP BY inp.product_id, inp.product_name, comp.comp_name, prd.pack_qty

        UNION ALL

        SELECT bod.product_id,
                prd.product_name,
                0 AS total_inbnd_quantity,
                NVL(SUM(bod.outbnd_quantity), 0) AS total_outbnd_quantity,
                comp.comp_name
        FROM   br_outbnd_d bod JOIN products prd ON prd.product_id = bod.product_id
                                JOIN br_outbnd br ON br.br_outbnd_no = bod.br_outbnd_no
                                JOIN companys comp ON comp.comp_id = br.outbnd_from
        GROUP BY bod.product_id, prd.product_name, comp.comp_name
        )
        SELECT   p.product_id,
                 p.product_name,
                 get_datacode_name(p.category_main) AS category_main,
                 get_datacode_name(p.category_sub) AS category_sub,
                 NVL(SUM(bs.total_inbnd_quantity), 0) - NVL(SUM(bs.total_outbnd_quantity), 0) AS stock_quantity,
                 p.vendor_name,
                 p.product_spec,
                 bs.comp_name,
                 p.safety_stock
        FROM     products p JOIN branch_stocks bs ON p.product_id = bs.product_id
        GROUP BY p.product_id, p.product_name, bs.comp_name, 
                 p.category_main, p.category_sub, p.vendor_name, p.product_spec, p.safety_stock
        ORDER BY p.product_id
    </select>
    <!-- 조건에 맞는 지점 재고 조회 -->
    <select id="selectBranchInventoryList" parameterType="BranchInventoryVO" resultType="BranchInventoryVO">
        WITH branch_stocks AS (
        SELECT   inp.product_id,
                inp.product_name,
                NVL(SUM(inp.total_inbnd_quantity) * prd.pack_qty, 0) as total_inbnd_quantity,
                0 AS total_outbnd_quantity,
                comp.comp_name
        FROM     inbnd_product inp JOIN inbnd inb ON inb.inbnd_no = inp.inbnd_no
                                    JOIN companys comp ON comp.comp_id = inb.inbnd_to
                                    JOIN products prd ON prd.product_id = inp.product_id
        WHERE    inb.outbnd_from = 'COM10001'
            AND    inp.inbnd_status = '000001'
        GROUP BY inp.product_id, inp.product_name, comp.comp_name, prd.pack_qty

        UNION ALL

        SELECT bod.product_id,
                prd.product_name,
                0 AS total_inbnd_quantity,
                NVL(SUM(bod.outbnd_quantity), 0) AS total_outbnd_quantity,
                comp.comp_name
        FROM   br_outbnd_d bod JOIN products prd ON prd.product_id = bod.product_id
                                JOIN br_outbnd br ON br.br_outbnd_no = bod.br_outbnd_no
                                JOIN companys comp ON comp.comp_id = br.outbnd_from
        GROUP BY bod.product_id, prd.product_name, comp.comp_name
        )
        SELECT   p.product_id,
                 p.product_name,
                 get_datacode_name(p.category_main) AS category_main,
                 get_datacode_name(p.category_sub) AS category_sub,
                 NVL(SUM(bs.total_inbnd_quantity), 0) - NVL(SUM(bs.total_outbnd_quantity), 0) AS stock_quantity,
                 p.vendor_name,
                 p.product_spec,
                 bs.comp_name,
                 p.safety_stock
        FROM     products p JOIN branch_stocks bs ON p.product_id = bs.product_id
        WHERE    1=1
        <if test="productName != null and productName != ''">
                AND p.product_name LIKE '%' || #{productName} || '%'
        </if>
        <if test="categorySub != null and categorySub != ''">
                AND get_datacode_name(p.category_sub) = #{categorySub}
        </if>
        <if test="vendorName != null and vendorName != ''">
                AND p.vendor_name LIKE '%' || #{vendorName} || '%'
        </if>
        <if test="compName != null and compName != ''">
                AND bs.comp_name LIKE '%' || #{compName} || '%'
        </if>
        GROUP BY p.product_id, p.product_name, bs.comp_name, 
                 p.category_main, p.category_sub, p.vendor_name, p.product_spec, p.safety_stock
        ORDER BY p.product_id
    </select>
</mapper>