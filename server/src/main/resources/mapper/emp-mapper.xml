<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.olivin.app.example.mapper.EmpMapper">

  <!-- Interface의 메서드를 통해 실행할 쿼리 정의 -->
   <select id="selectAllList" resultType="EmpVO">
    SELECT  c.comp_id,
            c.comp_name,
            d.department_id,
            e.employee_id,
            e.emp_name,
            e.emp_type,
            e.email,
            e.password,
            e.phone,
            e.position
    FROM    employees e
    JOIN companys c ON e.comp_id = c.comp_id
    JOIN departments d ON e.department_id = d.department_id
   </select>
   
   <!-- 등록 -->
   <insert id="insertCompanyIfNotExists" parameterType="EmpVO">
    MERGE INTO companys c
    USING (SELECT #{compId} AS comp_id, #{compName} AS comp_name FROM dual) input
    ON (c.comp_id = input.comp_id)
    WHEN NOT MATCHED THEN
        INSERT (comp_id, comp_name)
        VALUES (input.comp_id, input.comp_name)
    </insert>

    <insert id="insertEmp" parameterType="EmpVO">
    INSERT INTO employees (
        employee_id,
        emp_name,
        emp_type,
        email,
        password,
        phone,
        position,
        comp_id,
        department_id
    ) VALUES (
        #{employeeId},
        #{empName},
        #{empType},
        #{email},
        #{password},
        #{phone},
        #{position},
        #{compId},
        #{departmentId}
    )
    </insert>


   <!-- 수정 -->
   <update id="updateEmp" parameterType="EmpVO">
        UPDATE employees
        SET
                emp_name = #{employeeId},
                emp_type = #{empType},
                email = #{email},
                password = #{password},
                phone = #{phone},
                position = #{position}
        WHERE employee_id = #{employeeId}
   </update>

   <!-- 삭제 -->
    <delete id="deleteEmp" parameterType="String">
        DELETE FROM employees
        WHERE employee_id = #{employeeId}
    </delete>

</mapper>