<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.olivin.app.standard.mapper.ProductMapper">

    <!-- 기본 Result Map - 직원 이름 조인 포함 -->
    <resultMap id="ProductResultMap" type="ProductVO">
        <id property="productId" column="PRODUCT_ID"/>
        <result property="compId" column="COMP_ID"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="categoryMain" column="CATEGORY_MAIN"/>
        <result property="categorySub" column="CATEGORY_SUB"/>
        <result property="vendorName" column="VENDOR_NAME"/>
        <result property="productSpec" column="PRODUCT_SPEC"/>
        <result property="unit" column="UNIT"/>
        <result property="packQty" column="PACK_QTY"/>
        <result property="safetyStock" column="SAFETY_STOCK"/>
        <result property="purchasePrice" column="PURCHASE_PRICE"/>
        <result property="sellPrice" column="SELL_PRICE"/>
        <result property="regUser" column="REG_USER"/>
        <result property="regDate" column="REG_DATE"/>
        <result property="updateUser" column="UPDATE_USER"/>
        <result property="updateDate" column="UPDATE_DATE"/>
        <result property="status" column="STATUS"/>
        <result property="productImage" column="PRODUCT_IMAGE"/>
        <result property="note" column="NOTE"/>
        <!-- 조인으로 가져온 직원 이름들 -->
        <result property="regUserName" column="REG_USER_NAME"/>
        <result property="updateUserName" column="UPDATE_USER_NAME"/>
    </resultMap>

    <!-- 공통 SELECT 절 - employees 테이블과 조인 -->
    <sql id="selectProductWithEmployeeNames">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            e1.EMP_NAME as REG_USER_NAME,
            e2.EMP_NAME as UPDATE_USER_NAME
        FROM products p
        LEFT JOIN employees e1 ON p.REG_USER = e1.EMPLOYEE_ID
        LEFT JOIN employees e2 ON p.UPDATE_USER = e2.EMPLOYEE_ID
    </sql>

    <!-- 모든 제품 조회 -->
    <select id="selectAllList" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        ORDER BY p.REG_DATE DESC, p.PRODUCT_ID DESC
    </select>

    <!-- 조건부 제품 목록 조회 -->
    <select id="selectProductList" parameterType="ProductVO" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        <where>
            <if test="productId != null and productId != ''">
                AND p.PRODUCT_ID = #{productId}
            </if>
            <if test="productName != null and productName != ''">
                AND p.PRODUCT_NAME LIKE '%'||#{productName}||'%'
            </if>
            <if test="vendorName != null and vendorName != ''">
                AND p.VENDOR_NAME LIKE '%'||#{vendorName}||'%'
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND p.CATEGORY_MAIN = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND p.CATEGORY_SUB = #{categorySub}
            </if>
            <if test="status != null and status != ''">
                AND p.STATUS = #{status}
            </if>
            <if test="compId != null and compId != ''">
                AND p.COMP_ID = #{compId}
            </if>
        </where>
        ORDER BY p.REG_DATE DESC, p.PRODUCT_ID DESC
    </select>

    <!-- 단일 제품 조회 -->
    <select id="selectProduct" parameterType="string" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        WHERE p.PRODUCT_ID = #{productId}
    </select>

    <!-- 검색 조건에 따른 제품 조회 - XML 엔티티 사용 -->
    <select id="selectProductsByCondition" parameterType="map" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        <where>
            <if test="productName != null and productName != ''">
                AND p.PRODUCT_NAME LIKE '%'||#{productName}||'%'
            </if>
            <if test="vendorName != null and vendorName != ''">
                AND p.VENDOR_NAME LIKE '%'||#{vendorName}||'%'
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND p.CATEGORY_MAIN = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND p.CATEGORY_SUB = #{categorySub}
            </if>
            <if test="status != null and status != ''">
                AND p.STATUS = #{status}
            </if>
            <if test="compId != null and compId != ''">
                AND p.COMP_ID = #{compId}
            </if>
            <if test="regUser != null and regUser != ''">
                AND p.REG_USER = #{regUser}
            </if>
            <if test="packQty != null">
                AND p.PACK_QTY = #{packQty}
            </if>
            <if test="regDateFrom != null and regDateFrom != ''">
                <![CDATA[
                AND p.REG_DATE >= TO_DATE(#{regDateFrom}, 'YYYY-MM-DD')
                ]]>
            </if>
            <if test="regDateTo != null and regDateTo != ''">
                <![CDATA[
                AND p.REG_DATE <= TO_DATE(#{regDateTo}, 'YYYY-MM-DD') + INTERVAL '1' DAY - INTERVAL '1' SECOND
                ]]>
            </if>
        </where>
        ORDER BY p.REG_DATE DESC, p.PRODUCT_ID DESC
    </select>

    <!-- 승인 대기 제품 조회 -->
    <select id="selectPendingProducts" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        WHERE p.STATUS = '040002'
        ORDER BY p.REG_DATE DESC, p.PRODUCT_ID DESC
    </select>

    <!-- 승인된 제품 조회 -->
    <select id="selectApprovedProducts" resultMap="ProductResultMap">
        <include refid="selectProductWithEmployeeNames"/>
        WHERE p.STATUS = '040001'
        ORDER BY p.REG_DATE DESC, p.PRODUCT_ID DESC
    </select>

    <!-- 제품 등록 -->
    <insert id="insertProduct" parameterType="ProductVO">
        INSERT INTO products (
            PRODUCT_ID, COMP_ID, PRODUCT_NAME, CATEGORY_MAIN, CATEGORY_SUB,
            VENDOR_NAME, PRODUCT_SPEC, UNIT, PACK_QTY, SAFETY_STOCK,
            PURCHASE_PRICE, SELL_PRICE, REG_USER, REG_DATE, STATUS,
            PRODUCT_IMAGE, NOTE
        ) VALUES (
            #{productId}, #{compId}, #{productName}, #{categoryMain}, #{categorySub},
            #{vendorName}, #{productSpec}, #{unit}, #{packQty}, #{safetyStock},
            #{purchasePrice}, #{sellPrice}, #{regUser}, #{regDate}, #{status},
            #{productImage}, #{note}
        )
    </insert>

    <!-- 제품 수정 -->
    <update id="updateProduct" parameterType="ProductVO">
        UPDATE products SET
            COMP_ID = #{compId},
            PRODUCT_NAME = #{productName},
            CATEGORY_MAIN = #{categoryMain},
            CATEGORY_SUB = #{categorySub},
            VENDOR_NAME = #{vendorName},
            PRODUCT_SPEC = #{productSpec},
            UNIT = #{unit},
            PACK_QTY = #{packQty},
            SAFETY_STOCK = #{safetyStock},
            PURCHASE_PRICE = #{purchasePrice},
            SELL_PRICE = #{sellPrice},
            UPDATE_USER = #{updateUser},
            UPDATE_DATE = #{updateDate},
            STATUS = #{status},
            PRODUCT_IMAGE = #{productImage},
            NOTE = #{note}
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 제품 삭제 -->
    <delete id="deleteProduct" parameterType="string">
        DELETE FROM products WHERE PRODUCT_ID = #{productId}
    </delete>

    <!-- 제품 ID 중복 확인 -->
    <select id="checkProductId" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM products WHERE PRODUCT_ID = #{productId}
    </select>

    <!-- 카테고리별 마지막 제품 ID 조회 -->
    <select id="selectLastProductIdByCategory" parameterType="string" resultType="string">
        <![CDATA[
        SELECT PRODUCT_ID 
        FROM products 
        WHERE PRODUCT_ID LIKE #{prefix}||'%'
        ORDER BY PRODUCT_ID DESC
        FETCH FIRST 1 ROWS ONLY
        ]]>
    </select>

    <!-- 제품 상태만 업데이트 -->
    <update id="updateProductStatus">
        UPDATE products SET
            STATUS = #{status},
            UPDATE_USER = #{updateUser},
            UPDATE_DATE = SYSDATE
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 승인 처리용 업데이트 -->
    <update id="updateProductApprovalStatus" parameterType="map">
        UPDATE products SET
            STATUS = #{status},
            UPDATE_USER = #{updateUser},
            UPDATE_DATE = SYSDATE
            <if test="note != null and note != ''">
                , NOTE = #{note}
            </if>
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 간단 승인 업데이트 -->
    <update id="updateProductSimpleApproval" parameterType="map">
        UPDATE products SET
            STATUS = #{status},
            UPDATE_USER = #{updateUser},
            UPDATE_DATE = SYSDATE
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 제품 상태 조회 -->
    <select id="selectProductStatus" parameterType="string" resultType="string">
        SELECT STATUS FROM products WHERE PRODUCT_ID = #{productId}
    </select>

</mapper>