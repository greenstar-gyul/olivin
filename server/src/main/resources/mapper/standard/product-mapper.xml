<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.olivin.app.standard.mapper.ProductMapper">

    <!-- 기본 ResultMap - 직원 이름 조인 포함 -->
    <resultMap id="ProductResultMap" type="ProductVO">
        <id column="PRODUCT_ID" property="productId"/>
        <result column="COMP_ID" property="compId"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="CATEGORY_MAIN" property="categoryMain"/>
        <result column="CATEGORY_SUB" property="categorySub"/>
        <result column="VENDOR_NAME" property="vendorName"/>
        <result column="PRODUCT_SPEC" property="productSpec"/>
        <result column="UNIT" property="unit"/>
        <result column="PACK_QTY" property="packQty"/>
        <result column="SAFETY_STOCK" property="safetyStock"/>
        <result column="PURCHASE_PRICE" property="purchasePrice"/>
        <result column="SELL_PRICE" property="sellPrice"/>
        <result column="REG_USER" property="regUser"/>
        <result column="REG_DATE" property="regDate"/>
        <result column="UPDATE_USER" property="updateUser"/>
        <result column="UPDATE_DATE" property="updateDate"/>
        <result column="STATUS" property="status"/>
        <result column="PRODUCT_IMAGE" property="productImage"/>
        <result column="NOTE" property="note"/>
        <!-- 조인된 직원 이름 -->
        <result column="REG_USER_NAME" property="regUserName"/>
        <result column="UPDATE_USER_NAME" property="updateUserName"/>
    </resultMap>

    <!-- 모든 제품 조회 - 직원 이름 조인 포함 -->
    <select id="selectAllList" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        ORDER BY p.PRODUCT_ID ASC
    </select>

    <!-- 승인된 제품만 조회 - 직원 이름 조인 포함 -->
    <select id="selectApprovedProducts" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        WHERE p.STATUS = '040001'
        ORDER BY p.PRODUCT_ID ASC
    </select>

    <!-- 승인 대기 제품 조회 - 직원 이름 조인 포함 -->
    <select id="selectPendingProducts" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        WHERE p.STATUS = '040002'
        ORDER BY p.PRODUCT_ID ASC
    </select>

    <!-- 특정 제품 조회 - 직원 이름 조인 포함 -->
    <select id="selectProduct" parameterType="String" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        WHERE p.PRODUCT_ID = #{productId}
    </select>

    <!-- 조건별 제품 목록 조회 - 직원 이름 조인 포함 -->
    <select id="selectProductList" parameterType="ProductVO" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        <where>
            <if test="productName != null and productName != ''">
                AND p.PRODUCT_NAME LIKE CONCAT('%', #{productName}, '%')
            </if>
            <if test="vendorName != null and vendorName != ''">
                AND p.VENDOR_NAME LIKE CONCAT('%', #{vendorName}, '%')
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND p.CATEGORY_MAIN = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND p.CATEGORY_SUB = #{categorySub}
            </if>
            <if test="status != null and status != ''">
                AND p.STATUS = #{status}
            </if>
        </where>
        ORDER BY p.PRODUCT_ID ASC
    </select>

    <!-- 검색 조건별 제품 조회 - 직원 이름 조인 포함 -->
    <select id="selectProductsByCondition" parameterType="map" resultMap="ProductResultMap">
        SELECT 
            p.PRODUCT_ID,
            p.COMP_ID,
            p.PRODUCT_NAME,
            p.CATEGORY_MAIN,
            p.CATEGORY_SUB,
            p.VENDOR_NAME,
            p.PRODUCT_SPEC,
            p.UNIT,
            p.PACK_QTY,
            p.SAFETY_STOCK,
            p.PURCHASE_PRICE,
            p.SELL_PRICE,
            p.REG_USER,
            p.REG_DATE,
            p.UPDATE_USER,
            p.UPDATE_DATE,
            p.STATUS,
            p.PRODUCT_IMAGE,
            p.NOTE,
            reg_emp.EMP_NAME as REG_USER_NAME,
            upd_emp.EMP_NAME as UPDATE_USER_NAME
        FROM PRODUCTS p
        LEFT JOIN EMPLOYEES reg_emp ON p.REG_USER = reg_emp.EMPLOYEE_ID
        LEFT JOIN EMPLOYEES upd_emp ON p.UPDATE_USER = upd_emp.EMPLOYEE_ID
        <where>
            <if test="productName != null and productName != ''">
                AND UPPER(p.PRODUCT_NAME) LIKE UPPER('%' || #{productName,jdbcType=VARCHAR} || '%')
            </if>
            <if test="vendorName != null and vendorName != ''">
                AND UPPER(p.VENDOR_NAME) LIKE UPPER('%' || #{vendorName,jdbcType=VARCHAR} || '%')
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND p.CATEGORY_MAIN = #{categoryMain,jdbcType=VARCHAR}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND p.CATEGORY_SUB = #{categorySub,jdbcType=VARCHAR}
            </if>
            <if test="compId != null and compId != ''">
                AND p.COMP_ID = #{compId,jdbcType=VARCHAR}
            </if>
            <if test="packQty != null">
                AND p.PACK_QTY = #{packQty,jdbcType=NUMERIC}
            </if>
            <if test="regUser != null and regUser != ''">
                AND (UPPER(p.REG_USER) LIKE UPPER('%' || #{regUser,jdbcType=VARCHAR} || '%')
                    OR UPPER(reg_emp.EMP_NAME) LIKE UPPER('%' || #{regUser,jdbcType=VARCHAR} || '%'))
            </if>
            <if test="status != null and status != ''">
                AND p.STATUS = #{status,jdbcType=VARCHAR}
            </if>
            <!-- 수정후: -->
            <if test="regDateFrom != null">
                <![CDATA[
                AND p.REG_DATE >= #{regDateFrom}
                ]]>
            </if>
            <if test="regDateTo != null">
                <![CDATA[
                AND p.REG_DATE <= #{regDateTo}
                ]]>
            </if>
        </where>
        ORDER BY p.PRODUCT_ID ASC
    </select>

    <!-- 제품 등록 - Oracle용 jdbcType 명시 -->
    <insert id="insertProduct" parameterType="ProductVO">
        INSERT INTO PRODUCTS (
            PRODUCT_ID,
            COMP_ID,
            PRODUCT_NAME,
            CATEGORY_MAIN,
            CATEGORY_SUB,
            VENDOR_NAME,
            PRODUCT_SPEC,
            UNIT,
            PACK_QTY,
            SAFETY_STOCK,
            PURCHASE_PRICE,
            SELL_PRICE,
            REG_USER,
            REG_DATE,
            STATUS,
            PRODUCT_IMAGE,
            NOTE
        ) VALUES (
            #{productId,jdbcType=VARCHAR},
            #{compId,jdbcType=VARCHAR},
            #{productName,jdbcType=VARCHAR},
            #{categoryMain,jdbcType=VARCHAR},
            #{categorySub,jdbcType=VARCHAR},
            #{vendorName,jdbcType=VARCHAR},
            #{productSpec,jdbcType=VARCHAR},
            #{unit,jdbcType=VARCHAR},
            #{packQty,jdbcType=NUMERIC},
            #{safetyStock,jdbcType=NUMERIC},
            #{purchasePrice,jdbcType=DECIMAL},
            #{sellPrice,jdbcType=DECIMAL},
            #{regUser,jdbcType=VARCHAR},
            #{regDate,jdbcType=DATE},
            #{status,jdbcType=VARCHAR},
            #{productImage,jdbcType=VARCHAR},
            #{note,jdbcType=VARCHAR}
        )
    </insert>

    <!-- 제품 수정 - Oracle용 jdbcType 명시 -->
    <update id="updateProduct" parameterType="ProductVO">
        UPDATE PRODUCTS SET
            COMP_ID = #{compId,jdbcType=VARCHAR},
            PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
            CATEGORY_MAIN = #{categoryMain,jdbcType=VARCHAR},
            CATEGORY_SUB = #{categorySub,jdbcType=VARCHAR},
            VENDOR_NAME = #{vendorName,jdbcType=VARCHAR},
            PRODUCT_SPEC = #{productSpec,jdbcType=VARCHAR},
            UNIT = #{unit,jdbcType=VARCHAR},
            PACK_QTY = #{packQty,jdbcType=NUMERIC},
            SAFETY_STOCK = #{safetyStock,jdbcType=NUMERIC},
            PURCHASE_PRICE = #{purchasePrice,jdbcType=DECIMAL},
            SELL_PRICE = #{sellPrice,jdbcType=DECIMAL},
            UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            UPDATE_DATE = #{updateDate,jdbcType=DATE},
            STATUS = #{status,jdbcType=VARCHAR},
            PRODUCT_IMAGE = #{productImage,jdbcType=VARCHAR},
            NOTE = #{note,jdbcType=VARCHAR}
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 제품 삭제 -->
    <delete id="deleteProduct" parameterType="String">
        DELETE FROM PRODUCTS WHERE PRODUCT_ID = #{productId}
    </delete>

    <!-- 제품 ID 중복 확인 -->
    <select id="checkProductId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM PRODUCTS WHERE PRODUCT_ID = #{productId}
    </select>

    <!-- 카테고리별 마지막 제품 ID 조회 (Oracle 버전) -->
    <select id="selectLastProductIdByCategory" parameterType="String" resultType="String">
        SELECT PRODUCT_ID 
        FROM (
            SELECT PRODUCT_ID 
            FROM PRODUCTS 
            WHERE PRODUCT_ID LIKE #{prefix} || '%'
            ORDER BY PRODUCT_ID DESC
        ) 
        WHERE ROWNUM = 1
    </select>

    <!-- MySQL을 사용하는 경우 위 쿼리를 아래로 교체
    <select id="selectLastProductIdByCategory" parameterType="String" resultType="String">
        SELECT PRODUCT_ID 
        FROM PRODUCTS 
        WHERE PRODUCT_ID LIKE CONCAT(#{prefix}, '%')
        ORDER BY PRODUCT_ID DESC 
        LIMIT 1
    </select>
    -->

    <!-- 제품 상태 업데이트 - Oracle용 -->
    <update id="updateProductStatus" parameterType="map">
        UPDATE PRODUCTS SET
            STATUS = #{status,jdbcType=VARCHAR},
            UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            UPDATE_DATE = SYSDATE
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 제품 승인 상태 업데이트 - Oracle용 -->
    <update id="updateProductApprovalStatus" parameterType="map">
        UPDATE PRODUCTS SET
            STATUS = #{status,jdbcType=VARCHAR},
            UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            UPDATE_DATE = SYSDATE
        <if test="note != null and note != ''">
            , NOTE = #{note,jdbcType=VARCHAR}
        </if>
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 간단한 승인 업데이트 - Oracle용 -->
    <update id="updateProductSimpleApproval" parameterType="map">
        UPDATE PRODUCTS SET
            STATUS = #{status,jdbcType=VARCHAR},
            UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
            UPDATE_DATE = SYSDATE
        WHERE PRODUCT_ID = #{productId}
    </update>

    <!-- 제품 상태만 조회 -->
    <select id="selectProductStatus" parameterType="String" resultType="String">
        SELECT STATUS FROM PRODUCTS WHERE PRODUCT_ID = #{productId}
    </select>

</mapper>