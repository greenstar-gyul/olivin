<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.olivin.app.standard.mapper.CompanyMapper">
    
    <!-- ResultMap 정의 -->
    <resultMap id="CompanyResultMap" type="com.olivin.app.standard.service.CompanyVO">
        <id property="compId" column="COMP_ID"/>
        <result property="compName" column="COMP_NAME"/>
        <result property="compType" column="COMP_TYPE"/>
        <result property="bizNumber" column="BIZ_NUMBER"/>
        <result property="ceoName" column="CEO_NAME"/>
        <result property="settleCycle" column="SETTLE_CYCLE"/>
        <result property="settleMgr" column="SETTLE_MGR"/>
        <result property="regUser" column="REG_USER"/>
        <result property="regDate" column="REG_DATE"/>
        <result property="updateUser" column="UPDATE_USER"/>
        <result property="updateDate" column="UPDATE_DATE"/>
        <result property="address" column="ADDRESS"/>
        <result property="addressDetail" column="ADDRESS_DETAIL"/>
        <result property="zipcode" column="ZIPCODE"/>
        <result property="phone" column="PHONE"/>
        <result property="note" column="NOTE"/>
    </resultMap>

    <!-- 모든 회사 목록 조회 -->
    <select id="selectAllCompanies" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        ORDER BY COMP_ID ASC
    </select>

    <!-- 조건별 회사 목록 조회 -->
    <select id="selectCompanyList" parameterType="com.olivin.app.standard.service.CompanyVO" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        WHERE  1=1
        <if test="compName != null and compName != ''">
            AND COMP_NAME LIKE '%' || #{compName} || '%'
        </if>
        <if test="compType != null and compType != ''">
            AND COMP_TYPE = #{compType}
        </if>
        <if test="bizNumber != null and bizNumber != ''">
            AND BIZ_NUMBER LIKE '%' || #{bizNumber} || '%'
        </if>
        <if test="ceoName != null and ceoName != ''">
            AND CEO_NAME LIKE '%' || #{ceoName} || '%'
        </if>
        <if test="phone != null and phone != ''">
            AND PHONE LIKE '%' || #{phone} || '%'
        </if>
        ORDER BY COMP_ID ASC
    </select>

    <!-- 검색 조건에 따른 회사 목록 조회 -->
    <select id="selectCompaniesByCondition" parameterType="Map" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        WHERE  1=1
        <if test="compName != null and compName != ''">
            AND COMP_NAME LIKE '%' || #{compName} || '%'
        </if>
        <if test="compType != null and compType != ''">
            AND COMP_TYPE = #{compType}
        </if>
        <if test="bizNumber != null and bizNumber != ''">
            AND BIZ_NUMBER LIKE '%' || #{bizNumber} || '%'
        </if>
        <if test="ceoName != null and ceoName != ''">
            AND CEO_NAME LIKE '%' || #{ceoName} || '%'
        </if>
        <if test="phone != null and phone != ''">
            AND PHONE LIKE '%' || #{phone} || '%'
        </if>
        <if test="settleCycle != null and settleCycle != ''">
            AND SETTLE_CYCLE = #{settleCycle}
        </if>
        <if test="regDateFrom != null and regDateFrom != ''">
            <![CDATA[
                AND REG_DATE >= TO_DATE(#{regDateFrom}, 'YYYY-MM-DD')
            ]]>
        </if>
        <if test="regDateTo != null and regDateTo != ''">
            <![CDATA[
                AND REG_DATE <= TO_DATE(#{regDateTo}, 'YYYY-MM-DD') + INTERVAL '1' DAY - INTERVAL '1' SECOND
            ]]>
        </if>
        ORDER BY COMP_ID ASC
    </select>

    <!-- 특정 회사 조회 -->
    <select id="selectCompany" parameterType="String" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        WHERE  COMP_ID = #{compId}
    </select>

    <!-- 회사 등록 -->
    <insert id="insertCompany" parameterType="com.olivin.app.standard.service.CompanyVO">
        INSERT INTO COMPANYS (
            COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
            SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
            ADDRESS, ADDRESS_DETAIL, ZIPCODE, PHONE, NOTE
        ) VALUES (
            #{compId}, #{compName}, #{compType}, #{bizNumber}, #{ceoName},
            #{settleCycle}, #{settleMgr}, #{regUser}, #{regDate},
            #{address}, #{addressDetail}, #{zipcode}, #{phone}, #{note}
        )
    </insert>

    <!-- 회사 정보 수정 (NULL 안전 처리) -->
    <update id="updateCompany" parameterType="com.olivin.app.standard.service.CompanyVO">
        UPDATE COMPANYS 
        SET    
               COMP_NAME = NVL(#{compName}, COMP_NAME),
               COMP_TYPE = NVL(#{compType}, COMP_TYPE),
               BIZ_NUMBER = NVL(#{bizNumber}, BIZ_NUMBER),
               CEO_NAME = NVL(#{ceoName}, CEO_NAME),
               SETTLE_CYCLE = NVL(#{settleCycle}, SETTLE_CYCLE),
               SETTLE_MGR = NVL(#{settleMgr}, SETTLE_MGR),
               UPDATE_USER = NVL(#{updateUser}, UPDATE_USER),
               UPDATE_DATE = NVL(#{updateDate}, SYSDATE),
               ADDRESS = NVL(#{address}, ADDRESS),
               ADDRESS_DETAIL = NVL(#{addressDetail}, ADDRESS_DETAIL),
               ZIPCODE = NVL(#{zipcode}, ZIPCODE),
               PHONE = NVL(#{phone}, PHONE),
               NOTE = NVL(#{note}, NOTE)
        WHERE  COMP_ID = #{compId}
    </update>

    <!-- 회사 삭제 -->
    <delete id="deleteCompany" parameterType="String">
        DELETE FROM COMPANYS 
        WHERE  COMP_ID = #{compId}
    </delete>

    <!-- 회사 ID 존재 여부 확인 -->
    <select id="checkCompanyId" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM   COMPANYS
        WHERE  COMP_ID = #{compId}
    </select>

    <!-- 회사 유형별 조회 -->
    <select id="selectCompaniesByType" parameterType="String" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        WHERE  COMP_TYPE = #{compType}
        ORDER BY COMP_ID ASC
    </select>

    <!-- 마지막 회사 ID 조회 (ID 자동생성용) -->
    <select id="selectLastCompanyIdByType" parameterType="String" resultType="String">
        <![CDATA[
        SELECT COMP_ID
        FROM   (
            SELECT COMP_ID
            FROM   COMPANYS
            WHERE  COMP_TYPE = #{compType}
            ORDER BY COMP_ID DESC
        )
        WHERE ROWNUM = 1
        ]]>
    </select>

    <!-- 사업자번호 중복 확인 -->
    <select id="checkBizNumber" resultType="int">
        SELECT COUNT(*)
        FROM   COMPANYS
        WHERE  BIZ_NUMBER = #{bizNumber}
        <if test="excludeCompId != null and excludeCompId != ''">
            AND COMP_ID != #{excludeCompId}
        </if>
    </select>

    <!-- 회사명 중복 확인 -->
    <select id="checkCompanyName" resultType="int">
        SELECT COUNT(*)
        FROM   COMPANYS
        WHERE  COMP_NAME = #{compName}
        <if test="excludeCompId != null and excludeCompId != ''">
            AND COMP_ID != #{excludeCompId}
        </if>
    </select>

    <!-- 회사 유형별 통계 -->
    <select id="selectCompanyStatsByType" resultType="map">
        SELECT COMP_TYPE,
               COUNT(*) as TOTAL_COUNT
        FROM   COMPANYS
        GROUP BY COMP_TYPE
        ORDER BY COMP_TYPE
    </select>

    <!-- 최근 등록된 회사 조회 -->
    <select id="selectRecentCompanies" parameterType="int" resultMap="CompanyResultMap">
        SELECT COMP_ID, COMP_NAME, COMP_TYPE, BIZ_NUMBER, CEO_NAME,
               SETTLE_CYCLE, SETTLE_MGR, REG_USER, REG_DATE,
               UPDATE_USER, UPDATE_DATE, ADDRESS, ADDRESS_DETAIL,
               ZIPCODE, PHONE, NOTE
        FROM   COMPANYS
        ORDER BY REG_DATE DESC
        FETCH FIRST #{limit} ROWS ONLY
    </select>

    <!-- 해당 회사에 소속된 직원 수 조회 -->
    <select id="countEmployeesByCompId" resultType="int">
        SELECT COUNT(*)
        FROM EMPLOYEES 
        WHERE COMP_ID = #{compId}
    </select>

    <!-- 해당 회사에 등록된 제품 수 조회 -->
    <select id="countProductsByCompId" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCTS 
        WHERE COMP_ID = #{compId}
    </select>

    <!-- 해당 회사와 관련된 발주서 수 조회 (발주처 또는 공급처) -->
    <select id="countPurchaseOrdersByCompId" resultType="int">
        SELECT COUNT(*)
        FROM PURCHASE_ORDERS 
        WHERE ORDER_FROM_ID = #{compId} 
        OR ORDER_TO_ID = #{compId}
    </select>

    <!-- 해당 회사와 관련된 판매계획 수 조회 -->
    <select id="countSalesPlansByCompId" resultType="int">
        SELECT COUNT(*)
        FROM SALES_PLAN 
        WHERE COMP_ID = #{compId}
    </select>

    <!-- 해당 회사와 관련된 계정원장 수 조회 -->
    <select id="countAccountLedgersByCompId" resultType="int">
        SELECT COUNT(*)
        FROM ACCOUNT_LEDER 
        WHERE COMP_ID = #{compId}
    </select>
</mapper>