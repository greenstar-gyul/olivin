<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.olivin.app.standard.mapper.DeptMapper">
    
    <!-- ResultMap 정의 -->
    <resultMap id="DeptResultMap" type="com.olivin.app.standard.service.DeptVO">
        <id property="departmentId" column="DEPARTMENT_ID"/>
        <result property="deptName" column="DEPT_NAME"/>
    </resultMap>

    <!-- 모든 부서 목록 조회 -->
    <select id="selectAllDepts" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        ORDER BY DEPARTMENT_ID ASC
    </select>

    <!-- 조건별 부서 목록 조회 -->
    <select id="selectDeptList" parameterType="com.olivin.app.standard.service.DeptVO" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        WHERE  1=1
        <if test="deptName != null and deptName != ''">
            AND DEPT_NAME LIKE '%' || #{deptName} || '%'
        </if>
        <if test="departmentId != null and departmentId != ''">
            AND DEPARTMENT_ID = #{departmentId}
        </if>
        ORDER BY DEPARTMENT_ID ASC
    </select>

    <!-- 검색 조건에 따른 부서 목록 조회 -->
    <select id="selectDeptsByCondition" parameterType="Map" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        WHERE  1=1
        <if test="deptName != null and deptName != ''">
            AND DEPT_NAME LIKE '%' || #{deptName} || '%'
        </if>
        <if test="departmentId != null and departmentId != ''">
            AND DEPARTMENT_ID = #{departmentId}
        </if>
        ORDER BY DEPARTMENT_ID ASC
    </select>

    <!-- 활성 상태의 부서만 조회 -->
    <select id="selectActiveDepts" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        ORDER BY DEPARTMENT_ID ASC
    </select>

    <!-- 특정 부서 조회 -->
    <select id="selectDept" parameterType="String" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        WHERE  DEPARTMENT_ID = #{departmentId}
    </select>

    <!-- 부서 등록 -->
    <insert id="insertDept" parameterType="com.olivin.app.standard.service.DeptVO">
        INSERT INTO DEPARTMENTS (
            DEPARTMENT_ID, DEPT_NAME
        ) VALUES (
            #{departmentId}, #{deptName}
        )
    </insert>

    <!-- 부서 정보 수정 -->
    <update id="updateDept" parameterType="com.olivin.app.standard.service.DeptVO">
        UPDATE DEPARTMENTS 
        SET    DEPT_NAME = #{deptName}
        WHERE  DEPARTMENT_ID = #{departmentId}
    </update>

    <!-- 부서 삭제 -->
    <delete id="deleteDept" parameterType="String">
        DELETE FROM DEPARTMENTS 
        WHERE  DEPARTMENT_ID = #{departmentId}
    </delete>

    <!-- 부서 ID 존재 여부 확인 -->
    <select id="checkDeptId" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM   DEPARTMENTS
        WHERE  DEPARTMENT_ID = #{departmentId}
    </select>

    <!-- 부서명 중복 확인 -->
    <select id="checkDeptName" resultType="int">
        SELECT COUNT(*)
        FROM   DEPARTMENTS
        WHERE  DEPT_NAME = #{deptName}
        <if test="excludeDeptId != null and excludeDeptId != ''">
            AND DEPARTMENT_ID != #{excludeDeptId}
        </if>
    </select>

    <!-- 마지막 부서 ID 조회 (ID 자동생성용) -->
    <select id="selectLastDeptId" resultType="String">
        <![CDATA[
        SELECT DEPARTMENT_ID
        FROM   (
            SELECT DEPARTMENT_ID
            FROM   DEPARTMENTS
            WHERE  DEPARTMENT_ID LIKE 'DEPT%'
            ORDER BY DEPARTMENT_ID DESC
        )
        WHERE ROWNUM = 1
        ]]>
    </select>

    <!-- 부서 통계 조회 -->
    <select id="selectDeptStats" resultType="map">
        SELECT COUNT(*) as TOTAL_COUNT
        FROM   DEPARTMENTS
    </select>

    <!-- 최근 등록된 부서 조회 -->
    <select id="selectRecentDepts" parameterType="int" resultMap="DeptResultMap">
        SELECT DEPARTMENT_ID, DEPT_NAME
        FROM   DEPARTMENTS
        ORDER BY DEPARTMENT_ID DESC
        FETCH FIRST #{limit} ROWS ONLY
    </select>

    <!-- 회사별 부서 수 조회 -->
    <select id="countDeptsByCompId" resultType="int">
        SELECT COUNT(*)
        FROM   DEPARTMENTS 
        WHERE  1=1
        <!-- 회사별 부서 구분이 필요한 경우 여기에 추가 -->
    </select>

    <!-- 부서별 사원 수 조회 -->
    <select id="countEmpsByDeptId" resultType="int">
        SELECT COUNT(*)
        FROM   EMPLOYEES 
        WHERE  DEPARTMENT_ID = #{departmentId}
    </select>

    <!-- 부서에서 사용 중인 활성 사원이 있는지 확인 -->
    <select id="countActiveEmpsByDeptId" resultType="int">
        SELECT COUNT(*)
        FROM   EMPLOYEES 
        WHERE  DEPARTMENT_ID = #{departmentId}
        AND    NVL(STATUS, '050001') = '050001'
    </select>

</mapper>