<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.olivin.app.order.mapper.OrdersMapper">
    <sql id="orderIdPrefix">
    'POR'
    </sql>
    <!--  -->
    <select id="selectCompInfo" resultType="UserCompanyVO" parameterType="string">
		SELECT
			e.employee_id,
			e.comp_id,
			e.emp_name,
			c.comp_name,
			c.comp_type,
			c.note
		FROM
			employees e
				LEFT JOIN companys c ON e.comp_id = c.comp_id
		WHERE employee_id = #{empId}
    </select>
	<!-- select -->
    <select id="selectAllList" resultType="OrdersVO" parameterType="OrdersVO">
        SELECT
            order_id,
            order_title,
            creator_id,
            creator_name,
            order_type,
            order_from_id,
            reason,
            order_date,
            order_status,
            approver_id,
            approver_name,
            approval_date,
            total_amount,
            due_date,
            remark,
            order_to_id,
            order_to,
            order_from
        FROM
            purchase_orders
        <where>
            <if test="orderId != null and orderId != ''">
                AND order_id LIKE '%'||#{orderId}||'%'
            </if>
            <if test="orderTitle != null and orderTitle != ''">
                AND order_title LIKE '%'||#{orderTitle}||'%'
            </if>
            <if test="creatorName != null and creatorName != ''">
                AND creator_name LIKE '%'||#{creatorName}||'%'
            </if>
            <if test="approverName != null and approverName != ''">
                AND approver_name LIKE '%'||#{approverName}||'%'
            </if>
            <if test="orderType != null and orderType != ''">
                AND order_type = #{orderType}
            </if>
            <if test="orderFromId != null and orderFromId != ''">
                AND order_from_id = #{orderFromId}
            </if>
            <if test="orderFrom != null and orderFrom != ''">
                AND order_from LIKE '%'||#{orderFrom}||'%'
            </if>
            <if test="orderToId != null and orderToId != ''">
                AND order_to_id = #{orderToId}
            </if>
            <if test="orderTo != null and orderTo != ''">
                AND order_to LIKE '%'||#{orderTo}||'%'
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                AND order_status = #{orderStatus}
            </if>
            <if test="orderDate != null">
                AND order_date &gt;= #{orderDate}
            </if>
            <if test="dueDate != null">
                AND due_date &lt;= #{dueDate}
            </if>
        </where>
        ORDER BY order_id DESC
    </select>

    <select id="selectOneByOrderId" resultType="OrdersVO" parameterType="string">
        SELECT
            order_id,
            order_title,
            creator_id,
            creator_name,
            order_type,
            order_from_id,
            reason,
            order_date,
            order_status,
            approval_id,
            approval_name,
            approval_date,
            total_amount,
            due_date,
            remark,
            order_to_id,
            order_to,
            order_from
        FROM
            purchase_orders
        WHERE
            order_id = #{orderId}
    </select>
    
    <select id="selectDetailsByOrderId" resultType="OrdersDetailVO" parameterType="string">
        SELECT
            po_id,
            order_id,
            product_id,
            product_name,
            quantity,
            unit,
            status,
            category,
            vendor_id,
            vendor_name,
            price
        FROM
            purchase_orders_d
        WHERE
            order_id = #{orderId}
    </select>
    <!-- 
    <select id="SelectDetailList" resultType="map" parameterType="string">
        SELECT
            o.order_id,
            o.order_title,
            od.product_name,
            od.quantity,
            od.price,
            od.unit,
            od.status
        FROM
            purchase_orders o
        JOIN
            purchase_orders_d od ON o.order_id = od.order_id
        WHERE
            o.order_id = #{orderId}
    </select> -->
    
    
	<!-- insert -->
    <insert id="insertOne" parameterType="OrdersVO">
        <selectKey keyProperty="orderId" resultType="string" order="BEFORE">
        SELECT
            <include refid="orderIdPrefix"/> || TO_CHAR(SYSDATE, 'YYYYMMDD') ||
            LPAD(NVL(MAX(TO_NUMBER(SUBSTR(order_id, LENGTH(<include refid="orderIdPrefix"/> || TO_CHAR(SYSDATE, 'YYYYMMDD')) + 1))), 0) + 1, 3, '0')
        FROM purchase_orders
        WHERE order_id LIKE <include refid="orderIdPrefix"/> || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
        </selectKey>
        INSERT INTO purchase_orders (
           order_id,
           order_title,
           creator_id,
           creator_name,
           order_type,
           order_from_id,
           reason,
           order_date,
           order_status,
           approval_id,
           approval_name,
           approval_date,
           total_amount,
           due_date,
           remark,
           order_to_id,
           order_to,
           order_from
        ) VALUES (
            #{orderId},
            #{orderTitle},
            #{creatorId},
            #{creatorName},
            #{orderType},
            #{orderFromId},
            #{orderFrom},
            #{orderToId},
            #{orderTo},
            #{reason},
            #{orderDate},
            #{orderStatus},
            #{approvalId}
            #{approvalName},
            #{approvalDate},
            #{totalAmount},
            #{dueDate},
            #{remark}
        )
    </insert>

    <insert id="insertDetailOne" parameterType="OrdersDetailVO">
        INSERT INTO purchase_orders_d (
            po_id,
            order_id,
            product_id,
            product_name,
            quantity,
            unit,
            status,
            category,
            vendor_id,
            vendor_name,
            price
        ) VALUES (
            #{poId},
            #{orderId},
            #{productId},
            #{productName},
            #{quantity},
            #{unit},
            #{status},
            #{category},
            #{vendorId},
            #{vendorName},
            #{price}
        )
    </insert>
	
	
	<!-- delete -->
    <delete id="deleteOrder" parameterType="string">
        DELETE FROM
            purchase_orders
        WHERE
            order_id = #{orderId}
    </delete>
    
    <delete id="deleteOrderDetails" parameterType="string">
        DELETE FROM
            purchase_orders_d
        WHERE
            order_id = #{orderId}
    </delete>
</mapper>