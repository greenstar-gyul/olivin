name: 디스코드 알림봇

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]
  pull_request:
    types: [opened]
  pull_request_review_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      EVENT_NAME: ${{ github.event_name }}
      REPO: ${{ github.repository }}
      ISSUE_TITLE: ${{ github.event.issue.title }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      ISSUE_USER: ${{ github.event.issue.user.login }}
      ISSUE_BODY: ${{ github.event.issue.body }}
      ISSUE_COMMENT_USER: ${{ github.event.comment.user.login }}
      ISSUE_COMMENT_BODY: ${{ github.event.comment.body }}
      ISSUE_COMMENT_URL: ${{ github.event.comment.html_url }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      PR_USER: ${{ github.event.pull_request.user.login }}
      PR_BODY: ${{ github.event.pull_request.body }}
      PR_COMMENT_USER: ${{ github.event.comment.user.login }}
      PR_COMMENT_BODY: ${{ github.event.comment.body }}
      PR_COMMENT_URL: ${{ github.event.comment.html_url }}

    steps:
      - name: 디스코드로 알림 보내기
        run: |
          if [[ "$EVENT_NAME" == "issues" ]]; then
            URL="https://github.com/${REPO}/issues/${ISSUE_NUMBER}"
            WEBHOOK="${{ secrets.DISCORD_ISSUE_WEBHOOK_URL }}"

            CONTENT=$(cat <<EOF
[이슈 생성] #${ISSUE_NUMBER} - ${ISSUE_TITLE}
──────────────────────────────
작성자 : @${ISSUE_USER}
링크   : ${URL}

내용:
${ISSUE_BODY}
EOF
)

          elif [[ "$EVENT_NAME" == "pull_request" ]]; then
            URL="https://github.com/${REPO}/pull/${PR_NUMBER}"
            WEBHOOK="${{ secrets.DISCORD_PR_WEBHOOK_URL }}"

            CONTENT=$(cat <<EOF
[PR 생성] #${PR_NUMBER} - ${PR_TITLE}
──────────────────────────────
작성자 : @${PR_USER}
링크   : ${URL}

내용:
${PR_BODY}
EOF
)

          elif [[ "$EVENT_NAME" == "issue_comment" ]]; then
            WEBHOOK="${{ secrets.DISCORD_ISSUE_WEBHOOK_URL }}"

            CONTENT=$(cat <<EOF
[이슈 댓글] #${ISSUE_NUMBER}
──────────────────────────────
작성자 : @${ISSUE_COMMENT_USER}
링크   : ${ISSUE_COMMENT_URL}

댓글:
${ISSUE_COMMENT_BODY}
EOF
)

          elif [[ "$EVENT_NAME" == "pull_request_review_comment" ]]; then
            WEBHOOK="${{ secrets.DISCORD_PR_WEBHOOK_URL }}"

            CONTENT=$(cat <<EOF
[PR 댓글] #${PR_NUMBER}
──────────────────────────────
작성자 : @${PR_COMMENT_USER}
링크   : ${PR_COMMENT_URL}

댓글:
${PR_COMMENT_BODY}
EOF
)

          else
            CONTENT="⚠️ 알 수 없는 이벤트입니다: ${EVENT_NAME}"
            WEBHOOK="${{ secrets.DISCORD_ISSUE_WEBHOOK_URL }}"
          fi

          jq -n --arg content "$CONTENT" '{content: $content}' |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d @- \
               "$WEBHOOK"
